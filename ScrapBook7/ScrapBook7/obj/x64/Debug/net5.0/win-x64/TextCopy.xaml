<Page
    x:Class="ScrapBook7.TextCopy"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ScrapBook7"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Frame x:ConnectionId='2' x:Name="TextFrame">
        <Grid x:ConnectionId='3' x:Name="LayoutRoot" Background="#3C3C3C" Width="Auto" Height="455">
            <Grid.RowDefinitions>
                <RowDefinition Height="410" />
                <RowDefinition Height="45" />
            </Grid.RowDefinitions>
            <CommandBar Grid.Row="1" Height="Auto" Width="Auto" VerticalAlignment="Bottom" Margin="0" >
                <AppBarToggleButton Icon="Cut" Label="Cut"  />
                <AppBarToggleButton x:ConnectionId='8' Icon="Copy" Label="Copy"                      />
                <AppBarToggleButton x:ConnectionId='9' Icon="Paste" Label="Paste"                       />
                <AppBarSeparator/>
                <AppBarButton Icon="Message" Label="Messag" />
                <AppBarButton x:ConnectionId='10' Icon="Pictures" Label="Picturese"                    />
                <AppBarButton Icon="Document" Label="Document"/>

                <CommandBar.SecondaryCommands>
                    <AppBarButton Label="Help"/>
                    <AppBarButton Label="Others"/>
                </CommandBar.SecondaryCommands>

                <CommandBar.Content>
                    <TextBlock Text="Fuction Menu " Margin="12,14"/>
                </CommandBar.Content>
            </CommandBar>


            <ScrollViewer x:ConnectionId='4' Grid.Row="0" x:Name="MyScroll" Height="400" VerticalAlignment="TOP" Margin="0" >
                <Grid x:ConnectionId='5' x:Name="LayoutRoot2" Background="#3C3C3C" Width="800" Height="1000" Margin="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50" />
                        <RowDefinition Height="100" />
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="100" />
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="100" />
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="100" />
                        <RowDefinition Height="50"/>
                    </Grid.RowDefinitions>

                    <Rectangle Fill="White" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="7" Grid.RowSpan="3"/>


                    <Rectangle Fill="White" Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="7" Grid.RowSpan="2"/>

                    <StackPanel Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="7" Grid.RowSpan="3"  VerticalAlignment="Top" HorizontalAlignment="Left">

                        <TextBlock x:ConnectionId='7' x:Name="ReadingContent" Foreground="Black"  FontFamily="Verdana" LineStackingStrategy="MaxHeight" IsTextSelectionEnabled="True" Margin="20,5,10,5" LineHeight="10"  Width="500" Height="700" TextWrapping="Wrap" VerticalAlignment="Top" HorizontalAlignment="Left">
                                    Use the <Run FontSize="30">LineStackingStrategy</Run> property to determine how a line box is
                                    created for each line. A value of <Run FontSize="20">MaxHeight</Run> specifies that the stack
                                    height is the smallest value that contains all the inline elements on that line when those
                                    elements are properly aligned. A value of <Run FontSize="20">BlockLineHeight</Run> specifies
                                    that the stack height is determined by the block element LineHeight property value. A value of 
                                    <Run FontSize="20">BaselineToBaseline</Run> specifies that the stack height is determined by adding 
                                    LineHeight to the baseline of the previous line.
                        </TextBlock>

                    </StackPanel>

                    <StackPanel Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="7" Grid.RowSpan="2" VerticalAlignment="TOP" HorizontalAlignment="Left">
                        <TextBlock x:ConnectionId='6' x:Name="Memo1"  Foreground="Black" FontFamily="Verdana" LineStackingStrategy="MaxHeight" Margin="20,5,10,5"  LineHeight="10"  Width="500" TextWrapping="Wrap" />
                    </StackPanel>

                </Grid>
            </ScrollViewer>
        </Grid>
    </Frame>
</Page>

